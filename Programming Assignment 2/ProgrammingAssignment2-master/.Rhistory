library(ggvis)
install.packages("ggvis")
q()
help()
hello
swirl()
install.package("swirl")
install.packages("swirl")
package("swirl")
swirl
swirl()
x<-1:15
print(x)
y<-matrix(1:15,3,5)
print(y)
x<-1:5
y<-5:10
z<-rbind(x,y)
rbind(x,y)
help(rbind)
help
help()
help.start
help.start()
clear()
clear
clean()
cls
Xb<-matrix(0,n,b)
n<-3
b<-5
xb<-matrix(0,n,b)
print(xb)
v<-5
xv<-matrix(0,n,v)
xv
ib<-cbind(1:n,blocks)
ib<-cbind(1:n,b)
iv<-cbin(1:n,v)
iv<-cbind(1:n,v)
ib
iv
xb[ib]<-1
xv[iv]
xv[iv]<-1
xv
xv[iv]
xv[3]
Z<-crossprod(xb,xv)
z
t<-table(ib,iv)
t
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/ProgrammingAssignment2.R')
getwd()
setwd("F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master")
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/ProgrammingAssignment2.R')
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/assessment3.R')
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/assessment3.R')
source
?source
getwd()
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/assessment3.R')
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/assessment3.R')
?read
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/test.R')
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/test.R')
m
makecachematrix()
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/assessment3.R')
a
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/cachematrix.R')
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/cachematrix.R')
m <- makeCacheMatrix(matrix(c(2, 0, 0, 2), c(2, 2)))
cachesolve(m)
cacheSolve(m)
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/cachematrix.R')
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/cachematrix.R')
source('F:/Coursera/Programming Assignment 2/ProgrammingAssignment2-master/cachematrix.R')
m<-makeCacheMatrix(matrix(c(1,0,0,1),c(1,2)))
cacheSolve(m)
m<-makeCacheMatrix(matrix(c(1,0,0,1),c(2,2)))
cacheSolve(m)
